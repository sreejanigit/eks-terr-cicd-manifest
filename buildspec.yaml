version: 0.2

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv -f ./kubectl /usr/local/bin/kubectl
      #- mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
     
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon EKS...
      - role=$(aws sts assume-role --role-arn arn:aws:iam::077344799555:role/devopsthehardway-eks-iam-role --role-session-name codebuild_eks_session)
      - ROLE="arn:aws:iam::077344799555:role/eks-cb-manif"           
      - KEY=$(echo $role | jq ".Credentials.AccessKeyId" --raw-output)
      - SECRET=$(echo $role | jq ".Credentials.SecretAccessKey" --raw-output)
      - TOKEN=$(echo $role | jq ".Credentials.SessionToken" --raw-output)
      - export AWS_ACCESS_KEY_ID=$KEY
      - export AWS_SECRET_ACCESS_KEY=$SECRET
      - export AWS_SESSION_TOKEN=$TOKEN
      - aws sts get-caller-identity
      - aws eks --region us-east-1 update-kubeconfig --name terra-cicd-cluster
      - kubectl get -n kube-system configmap/aws-auth -o yaml | awk "/mapRoles: \|/{print;print \"$ROLE\";next}1" > /tmp/aws-auth-patch.yml
      - kubectl patch configmap/aws-auth -n kube-system --patch "$(cat /tmp/aws-auth-patch.yml)"
      - kubectl version
      
  build:
    commands:
      - echo Build started on `date`
      - kubectl get svc -A
      - kubectl apply -f eks-sample-depl-nginx.yaml
      - kubectl apply -f eks-sample-service-ngnx.yaml
  post_build:
    commands:
      - echo Build completed on `date`
