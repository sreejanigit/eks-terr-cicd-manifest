version: 0.2

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
     
  pre_build:
    commands:
      - echo Entered the pre_build phase..
      - echo Logging in to Amazon EKS...
#       - role=$(aws sts assume-role --role-arn arn:aws:iam::077344799555:role/devopsthehardway-eks-iam-role --role-session-name codebuild_eks_session)
             
#       - KEY=$(echo $role | jq ".Credentials.AccessKeyId" --raw-output)
#       - SECRET=$(echo $role | jq ".Credentials.SecretAccessKey" --raw-output)
#       - TOKEN=$(echo $role | jq ".Credentials.SessionToken" --raw-output)
#       - export AWS_ACCESS_KEY_ID=$KEY
#       - export AWS_SECRET_ACCESS_KEY=$SECRET
#       - export AWS_SESSION_TOKEN=$TOKEN
      - aws sts get-caller-identity
      - aws eks --region us-east-1 update-kubeconfig --name terra-cicd-cluster
      - kubectl version
      
  build:
    commands:
      - echo Build started on `date`
      - kubectl get svc -A
      - kubectl create namespace eks-sample-app
      - kubectl apply -f eks-sample-deployment.yaml
      - kubectl apply -f eks-sample-service.yaml
      - kubectl -n eks-sample-app expose deployment eks-sample-linux-deployment --type=LoadBalancer --name=eks-sample-linux-service-lb
      - kubectl -n eks-sample-app describe service eks-sample-linux-service-lb
  post_build:
    commands:
      - echo Build completed on `date`
